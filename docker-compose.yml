version: '3'
services:
  appointment-api:
    build: appointment
    depends_on:
      rabbitmq:
        condition: service_started
      postgres:
        condition: service_healthy
      appointment-migrations:
        condition: service_started
    restart: always
    ports:
      - 5000:5000
    environment:
      - APPOINTMENT_APP_PORT
      - APPOINTMENT_APP_HOST
      - APPOINTMENT_POSTGRES_URL
      - APPOINTMENT_POSTGRES_MIN_POOL_SIZE
      - APPOINTMENT_POSTGRES_MAX_POOL_SIZE
      - APPOINTMENT_RABBITMQ_URL
      - APPOINTMENT_RABBITMQ_EXCHANGE_TOPIC
      - APPOINTMENT_RABBITMQ_BINDING_KEY

  appointment-migrations:
    build: appointment
    entrypoint: python migrations/db_upgrade.py
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - APPOINTMENT_POSTGRES_URL

  billing-api:
    build: billing
    entrypoint: python server.py
    depends_on:
      postgres:
        condition: service_healthy
      billing-migrations:
        condition: service_started
    restart: always
    ports:
      - 5001:5001
    environment:
      - BILLING_APP_PORT
      - BILLING_APP_HOST
      - BILLING_POSTGRES_URL
      - BILLING_POSTGRES_MIN_POOL_SIZE
      - BILLING_POSTGRES_MAX_POOL_SIZE

  billing-consumer:
    build: billing
    entrypoint: python mq_consumer.py
    depends_on:
      rabbitmq:
        condition: service_started
      postgres:
        condition: service_healthy
      billing-migrations:
        condition: service_started
    restart: always
    environment:
      - BILLING_POSTGRES_URL
      - BILLING_RABBITMQ_URL
      - BILLING_RABBITMQ_EXCHANGE_TOPIC
      - BILLING_RABBITMQ_QUEUE_NAME
      - BILLING_RABBITMQ_BINDING_KEY

  billing-migrations:
    build: billing
    entrypoint: python migrations/db_upgrade.py
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - BILLING_POSTGRES_URL

  postgres:
    image: postgres:13-alpine
    restart: always
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD

  adminer:
    image: adminer:latest
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - postgres

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS
